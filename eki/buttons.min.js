function button(o, e) { void 0 === o && (o = {}), o.class = void 0 !== o.class ? o.class : "button", o.text = void 0 !== o.text ? o.text : "", o.text_size = void 0 !== o.text_size ? o.text_size : 16, o.x = void 0 !== o.x ? o.x : 0, o.y = void 0 !== o.y ? o.y : 0, o.w = void 0 !== o.w ? o.w : 100, o.h = void 0 !== o.h ? o.h : 30, o.offset_x = void 0 !== o.offset_x ? o.offset_x : 0, o.offset_y = void 0 !== o.offset_y ? o.offset_y : 0, o.mouse_button = void 0 !== o.mouse_button ? o.mouse_button : 0, o.down = void 0 !== o.down && o.down, o.origin_x = void 0 !== o.origin_x ? o.origin_x : 0, o.origin_y = void 0 !== o.origin_y ? o.origin_y : 0, o.hover = !1, o.pressed = !1, o.clicked = !1, o.released = !1, o.color = void 0 !== o.color ? o.color : "rgb(224,224,224)", o.border_color = void 0 !== o.border_color ? o.border_color : "rgb(0,0,0)", o.border_hover_color = void 0 !== o.border_hover_color ? o.border_hover_color : "rgb(0,0,0)", o.hover_color = void 0 !== o.hover_color ? o.hover_color : "rgb(240,240,240)", o.pressed_color = void 0 !== o.pressed_color ? o.pressed_color : "rgb(255,255,255)", o.border_thickness = void 0 !== o.border_thickness ? o.border_thickness : 1, o.corner_radius = void 0 !== o.corner_radius ? o.corner_radius : 0, o.font = void 0 !== o.font ? o.font : "Verdana", o.text_size = void 0 !== o.text_size ? o.text_size : 16, o.text_color = void 0 !== o.text_color ? o.text_color : "rgb(0,0,0)", o.text_hover_color = void 0 !== o.text_hover_color ? o.text_hover_color : "rgb(0,0,0)", o.text_margin = void 0 !== o.text_margin ? o.text_margin : 10, o.text_align = void 0 !== o.text_align ? o.text_align : "CENTER"; var t, r = o.color, d = o.border_color, i = o.border_hover_color, n = o.hover_color, s = o.pressed_color, l = o.border_thickness, _ = o.corner_radius, c = o.corners, x = o.shadow, a = o.hover_shadow, v = o.font, h = o.text_size, g = o.text_color, f = o.text_hover_color, u = o.text_shadow, w = o.text_offset, b = o.text_margin, p = o.text_align, y = o.shading, C = o.pattern, m = o.pattern_fixed, k = o.icon, E = o.icon_color, T = o.icon_hover_color, z = void 0 !== e ? e : this; if (void 0 !== o.style && (r = void 0 !== (t = o.style).color ? t.color : r, d = void 0 !== t.border_color ? t.border_color : d, i = void 0 !== t.border_hover_color ? t.border_hover_color : i, n = void 0 !== t.hover_color ? t.hover_color : n, s = void 0 !== t.pressed_color ? t.pressed_color : s, l = void 0 !== t.border_thickness ? t.border_thickness : l, _ = void 0 !== t.corner_radius ? t.corner_radius : _, c = void 0 !== t.corners ? t.corners : c, x = void 0 !== t.shadow ? t.shadow : x, a = void 0 !== t.hover_shadow ? t.hover_shadow : a, v = void 0 !== t.font ? t.font : v, h = void 0 !== t.text_size ? t.text_size : h, g = void 0 !== t.text_color ? t.text_color : g, f = void 0 !== t.text_hover_color ? t.text_hover_color : f, u = void 0 !== t.text_shadow ? t.text_shadow : u, w = void 0 !== t.text_offset ? t.text_offset : w, b = void 0 !== t.text_margin ? t.text_margin : b, p = void 0 !== t.text_align ? t.text_align : p, y = void 0 !== t.shading ? t.shading : y, C = void 0 !== t.pattern ? t.pattern : C, m = void 0 !== t.pattern_fixed ? t.pattern_fixed : m, E = void 0 !== t.icon_color ? t.icon_color : E, T = void 0 !== t.icon_hover_color ? t.icon_hover_color : T), void 0 !== o.exclude && "object" == typeof o.exclude) for (var S = 0; S < o.exclude.length; S++)r = "color" === o.exclude[S] ? o.color : r, d = "border_color" === o.exclude[S] ? o.border_color : d, i = "border_hover_color" === o.exclude[S] ? o.border_hover_color : i, n = "hover_color" === o.exclude[S] ? o.hover_color : n, s = "pressed_color" === o.exclude[S] ? o.pressed_color : s, l = "border_thickness" === o.exclude[S] ? o.border_thickness : l, _ = "corner_radius" === o.exclude[S] ? o.corner_radius : _, c = "corners" === o.exclude[S] ? o.corners : c, x = "shadow" === o.exclude[S] ? o.shadow : x, a = "hover_shadow" === o.exclude[S] ? o.hover_shadow : a, v = "font" === o.exclude[S] ? o.font : v, h = "text_size" === o.exclude[S] ? o.text_size : h, g = "text_color" === o.exclude[S] ? o.text_color : g, f = "text_hover_color" === o.exclude[S] ? o.text_hover_color : f, u = "text_shadow" === o.exclude[S] ? o.text_shadow : u, w = "text_offset" === o.exclude[S] ? o.text_offset : w, b = "text_margin" === o.exclude[S] ? o.text_margin : b, p = "text_align" === o.exclude[S] ? o.text_align : p, y = "shading" === o.exclude[S] ? o.shading : y, C = "pattern" === o.exclude[S] ? o.pattern : C, m = "pattern_fixed" === o.exclude[S] ? o.pattern_fixed : m, E = "icon_color" === o.exclude[S] ? o.icon_color : E, T = "icon_hover_color" === o.exclude[S] ? o.icon_hover_color : T; var R = "string" == typeof o.origin_x ? o.origin_x : o.origin_x * o.w, F = "string" == typeof o.origin_y ? o.origin_y : o.origin_y * o.h, N = [_, _, _, _]; if (void 0 !== c && 4 === c.length) for (S = 0; S < c.length; S++)N[S] = c[S]; if (i = void 0 !== i && "" !== i ? i : d, n = void 0 !== n && "" !== n ? n : r, s = void 0 !== s && "" !== s ? s : n, f = void 0 !== f && "" !== f ? f : g, w = void 0 !== w ? w : { x: 0, y: 0 }, T = void 0 !== T && "" !== T ? T : E, "button" === o.class) { var O = o.w, I = o.h, W = o.x + o.offset_x, L = o.y + o.offset_y, P = void 0 !== o.angle ? o.angle : 0; z.push(), z.translate(W, L), z.rotate(z.radians(P)), z.translate(-R, -F), z.stroke(0, 1), z.strokeWeight(1), z.noFill(), z.rect(0, 0, O, I, N[0], N[1], N[2], N[3]), z.drawingContext.isPointInPath(z.mouseX, z.mouseY) && (o.hover = !0), z.mouseIsPressed && 0 === o.mouse_button && (o.mouse_button = z.mouseButton, o.hover && o.mouse_button === z.LEFT && (o.down = !0, o.pressed = !0, void 0 !== o.style && void 0 !== o.style.on_pressed && o.style.on_pressed.call(o), void 0 !== o.on_pressed && o.on_pressed(this))), z.mouseIsPressed || (o.down && (o.released = !0, void 0 !== o.style && void 0 !== o.style.on_released && o.style.on_released.call(o), void 0 !== o.on_released && o.on_released(this), o.hover && (void 0 !== o.on_clicked && o.on_clicked(this), o.clicked = !0)), o.mouse_button = 0, o.down = !1); var A, B, G = r, M = d, X = g, Y = E, H = "", j = x, D = y; if (void 0 !== w && (w.x = void 0 !== w.x ? w.x : 0, w.y = void 0 !== w.y ? w.y : 0), o.hover && 0 === o.mouse_button && (G = n, M = i, j = void 0 !== a ? a : x, X = f, Y = T), o.down && (Y = (X = (j = (M = (G = o.hover ? s : n, i), void 0 !== a ? a : x), f), T)), z.strokeWeight(l), void 0 !== j && (z.stroke(M), z.fill(G), z.drawingContext.save(), z.drawingContext.shadowBlur = j.blur, z.drawingContext.shadowColor = j.color, z.drawingContext.shadowOffsetX = j.offset_x, z.drawingContext.shadowOffsetY = j.offset_y, z.rect(0, 0, O, I, N[0], N[1], N[2], N[3]), z.drawingContext.restore()), z.noStroke(), z.fill(G), z.rect(0, 0, O, I, N[0], N[1], N[2], N[3]), z.noStroke(), void 0 !== C && (z.drawingContext.save(), z.drawingContext.globalCompositeOperation = "multiply", z.fill(G), z.rect(0, 0, O, I, N[0], N[1], N[2], N[3]), A = new DOMMatrix, null !== C && ((m = void 0 !== m && m) || (A = (A = (A = A.translate(-W, -L)).rotate(-P)).translate(R, F), C.setTransform(A)), z.drawingContext.fillStyle = C), z.rect(0, 0, O, I, N[0], N[1], N[2], N[3]), z.drawingContext.restore()), 0 < D && (D = D <= 1 ? D : 1, D *= .5, B = z.drawingContext.createLinearGradient(0, 0, 0, I), o.down ? (B.addColorStop(0, "rgb(0,0,0,0)"), B.addColorStop(.3, "rgb(0,0,0,0)")) : (B.addColorStop(0, "rgb(255, 255, 255," + D + ")"), B.addColorStop(.4, "rgb(255, 255, 255, 0)"), B.addColorStop(.5, "rgb(0,0,0,0)")), B.addColorStop(1, "rgb(0,0,0," + D + ")"), z.drawingContext.fillStyle = B, z.rect(0, 0, O, I, N[0], N[1], N[2], N[3])), z.stroke(M), z.noFill(), z.rect(0, 0, O, I, N[0], N[1], N[2], N[3]), void 0 !== k) { z.imageMode(z.CENTER); var V = void 0 !== Y ? Y : "rgb(255,255,255)"; z.tint(V), z.image(o.icon, 0 + O / 2, 0 + I / 2), z.noTint() } else { z.textFont(), void 0 !== v && z.textFont(v), z.textSize(h); for (var q, S = 0; S < o.text.length && z.textWidth(H + o.text[S]) < O - 2 * b; S++)H += o.text[S]; if (H.length !== o.text.length) { for (; z.textWidth(H + "...") >= O - 2 * b && 0 !== (H = H.slice(0, H.length - 1)).length;); z.textWidth(H + "...") <= O - I - 2 * b && (H += "...") } q = "LEFT" === p ? (z.textAlign(z.LEFT, z.CENTER), 0 + b) : "RIGHT" === p ? (z.textAlign(z.RIGHT, z.CENTER), O - b + 0) : (z.textAlign(z.CENTER, z.CENTER), 0 + O / 2); var J = 0 + I / 2; z.noStroke(), void 0 !== u && (z.fill(0), z.drawingContext.save(), z.drawingContext.shadowBlur = u.blur, z.drawingContext.shadowColor = u.color, z.drawingContext.shadowOffsetX = u.offset_x, z.drawingContext.shadowOffsetY = u.offset_y, z.text(H, q + w.x, J + w.y), z.drawingContext.restore()), z.fill(X), z.text(H, q + w.x, J + w.y) } z.pop() } return o }
